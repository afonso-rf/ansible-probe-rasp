---
- name: Playbook for adding nanagement vlan and pppoe connection to probe Raspberry PI
  hosts: probe
  become: yes

  vars:
    packages:
      - git
      - vlan
      - ppp
      - pppoeconf
      - zabbix-agent
      - python3

  vars_files:
    - variables.yml
    
  tasks:
  - name: Packages update
    ansible.builtin.apt:
      update_cache: yes

  - name: Installing packages
    ansible.builtin.package:
      name: "{{ item }}"
      state: latest
    with_items: "{{ packages }}"
  
  - name: Add the 802.1q module
    modprobe:
      name: 8021q
      state: present

  - name: Copy vlan config file
    ansible.builtin.template:
      src: src/template-vlan.j2
      dest: "/etc/network/interfaces.d/vlan{{ mngt.vlan }}"
      owner: root
      group: root
      mode: '644'
    when: mngt.vlan is defined and mngt.vlan != ''

  - name: Copy script to ipv6 pppoe default route
    ansible.builtin.copy:
      src: ./src/defaultroute_ipv6
      dest: /etc/ppp/ip-up.d/
      mode: '755'
    
  - name: Add username and password pppoe chap secrets
    ansible.builtin.lineinfile:
      path: /etc/ppp/chap-secrets
      state: present
      line: '"{{ pppoe.username }}" * "{{ pppoe.passwd }}"'
    when: pppoe.username is defined and pppoe.username != ''

  - name: Add username and password pppoe pap secrets
    ansible.builtin.lineinfile:
      path: /etc/ppp/pap-secrets
      state: present
      line: '"{{ pppoe.username }}" * "{{ pppoe.passwd }}"'
    when: pppoe.username is defined and pppoe.username != ''

  - name: Copy vlan config file
    ansible.builtin.template:
      src: src/template.dsl-provider.j2
      dest: "/etc/ppp/peers/dsl-provider"
      owner: root
      group: root
      mode: '644'
    when: pppoe.username is defined and pppoe.username != ''
    
  - name: Copy script reconnect pppoe
    ansible.builtin.copy:
      src: ./src/reconnect_pppoe
      dest: /var/local/
      mode: '755'
    when: pppoe.username is defined and pppoe.username != ''
  
  - name: Add reconnect_pppoe in crontab
    ansible.builtin.cron:
      name: reconnect_pppoe
      minute: "*/1"
      job: "/usr/bin/python3 /var/local/reconnect_pppoe"
    when: pppoe.username is defined and pppoe.username != ''
  
